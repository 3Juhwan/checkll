plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'kr.allcll'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('build') {
    dependsOn('validateLombokUsage')
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('validateLombokUsage') {
    doLast {
        def allowedPackage = 'kr/allcll/checkll/datasource'
        def lombokAnnotations = ['@Getter', '@Setter', '@ToString', '@AllArgsConstructor', '@NoArgsConstructor']

        fileTree('src/main/java').each { file ->
            if (file.name.endsWith('.java')) {
                file.eachLine { line, lineNumber ->
                    if (lombokAnnotations.any { line.contains(it) } &&
                            !file.path.contains(allowedPackage)) {
                        throw new GradleException("Lombok annotation found in disallowed package: ${file.path} at line ${lineNumber}")
                    }
                }
            }
        }
    }
}
